apiVersion: networking.k8s.io/v1
# UPDATE API
kind: Ingress
metadata:
  name: ingress-service
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-production
    ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
  # annotations:
  #   nginx.ingress.kubernetes.io/use-regex: 'true'
  #   # ADD ANNOTATION
  #   nginx.ingress.kubernetes.io/rewrite-target: /$1
    # UPDATE ANNOTATION
spec:
  ingressClassName: nginx
  rules:
    - host: case0sh.com
      http:
        paths:
          - path: /
            # UPDATE PATH
            pathType: Prefix
            # ADD PATHTYPE
            backend:
              service:
                # UPDATE SERVICE FIELDS
                name:  story-storyblog
                port:
                  number: 80
    - host: mon.case0sh.com
      http:
        paths:
          - path: /
            # UPDATE PATH
            pathType: Prefix
            # ADD PATHTYPE
            backend:
              service:
                # UPDATE SERVICE FIELDS
                name:  my-kube-prometheus-stack-grafana
                port:
                  number: 80
  tls:
    - hosts:
      - case0sh.com
      - mon.case0sh.com
      secretName: onemo

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argocd-server-http-ingress
  namespace: argocd
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-production
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
spec:
  ingressClassName: "nginx"
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: argocd-server
            port:
              name: https
    host: argo.case0sh.com
  tls:
  - hosts:
    - argo.case0sh.com
    secretName: argocd-secret # do not change, this is provided by Argo CD